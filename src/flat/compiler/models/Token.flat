package flat/compiler/models

data class {
  visible String value
  visible Location location
  visible Int type

  visible lazy Int endLineNumber => location.lineNumber + value.howMany('\n')
  visible lazy Int endColumn => value.howMany('\n') > 0 ?
    value.count - value.lastIndexOf('\n') :
    (location.column + value.count)

  data class Location {
    visible Int lineNumber
    visible Int column
  }

  class Type {
    visible static Int IDENTIFIER = 1
    visible static Int INTEGER = 2
    visible static Int FLOAT = 3
    visible static Int STRING = 4
    visible static Int COMMENT = 5
    visible static Int WHITESPACE = 6
    visible static Int WS = 6
    visible static Int SYMBOL = 7

    public static toString(Int value) => "#{value}" {
      match value {
        IDENTIFIER => return "IDENTIFIER"
        INTEGER => return "INTEGER"
        FLOAT => return "FLOAT"
        STRING => return "STRING"
        COMMENT => return "COMMENT"
        WHITESPACE => return "WHITESPACE"
        WS => return "WS"
        SYMBOL => return "SYMBOL"
      }
    }
  }
}